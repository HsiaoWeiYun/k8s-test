apiVersion: apps/v1beta2 #api組/版號
kind: ReplicaSet
metadata:
  name: demo-rs
spec:
  replicas: 2
  selector:
#    matchLabels: #簡單且表達力不足的matchLabels
#      env: dev
#      app: demo
    matchExpressions: #全為true時才成立
      - key: env
        operator: In #標籤包含多個值
        values:
          - dev
      - key: env
        operator: NotIn #標籤不包含多個值
        values:
          - rls
      - key: app
        operator: Exists #標籤是否存在, 值不重要
      - key: test
        operator: DoesNotExist #標籤不存在
  template:
    metadata:
      labels:
        env: dev
        app: demo
    spec:
      nodeSelector: #調度到具有特定標籤的節點上
        kubernetes.io/hostname: "docker-desktop"
      containers:
        - image: demo:v1 #創建容器所用image
          name: demo #容器名稱
          volumeMounts:
            - mountPath: /tmp-dir
              name: tmp-dir
            - mountPath: /git-repo  #沒辦法即時檢測更新, 若要即時更新應該要用sidecard的方式
              name: git-repo
              readOnly: true
            - mountPath: /tmp
              name: host
            - mountPath: /demo-pvc
              name: demo-pvc
          readinessProbe: #就緒探針意味著檢測是否就緒開始接收流量, 檢測失敗則從svc內移除endpoints
            httpGet:  #使用http
              port: 8080 #檢查接口port
              path: /ready #接口位置
            initialDelaySeconds: 20 #啟動時等待多少秒檢測
            periodSeconds: 6 #每隔多少秒檢測
          livenessProbe: #存活探針意味著這個服務是否還活著, 監測失敗則重建pod
            httpGet: #使用http
              port: 8080 #檢查接口port
              path: /live #接口位置
            initialDelaySeconds: 20 #啟動時等待多少秒檢測
            periodSeconds: 6 #每隔多少秒檢測
          ports:
            - containerPort: 8080 #容器監聽端口
              protocol: TCP
              name: demo-default #命名這個port
      volumes:
        - name: tmp-dir
          emptyDir: {}
        - name: git-repo
          gitRepo:
            repository: https://github.com/HsiaoWeiYun/infra.git  #git倉位置
            revision: master  #branch
            directory: .  #repo clone 到根目錄
        - name: host
          hostPath:
            path: /tmp
        - name: demo-pvc
          persistentVolumeClaim:
            claimName: demo-pvc